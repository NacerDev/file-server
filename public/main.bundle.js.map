{"version":3,"sources":["webpack:///./src async","webpack:///./src/main.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 152;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src async\n// module id = 152\n// module chunks = 1","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { Http } from '@angular/http'\nimport { NgbModal, ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\nimport { FileUploader } from 'ng2-file-upload';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n\n  SERVER_URL: string = \"http://localhost:3000\";\n\n  ERROR: string = \"\";\n\n  uploader: FileUploader = new FileUploader({});\n\n  path: Array<string> = [];\n  folders: Array<any> = [];\n  files: Array<any> = [];\n\n  folderName: String = \"\";\n  fileName: string = \"\";\n  @ViewChild(\"error\") errormodal: ElementRef;\n\n  ngOnInit(): void {\n    this._Http.get(this.SERVER_URL + \"/tree\").subscribe(\n      (response) => {\n        this.path = [\"dir\"];\n        var data = response.json();\n        this.folders = data.filter(x => x.isDir);\n        this.files = data.filter(x => !x.isDir);\n      },\n      (error) => { this.alertError(JSON.stringify(error)) }\n    )\n\n  }\n\n\n  constructor(private _Http: Http, private _modalService: NgbModal) {\n  }\n\n  alertError(message) {\n    this.ERROR = message;\n    this._modalService.open(this.errormodal).result.then(\n      (result) => { this.ERROR = \"\"; },\n      (reason) => { this.ERROR = \"\"; })\n\n  }\n\n  openFolderModal(foldernamemodal) {\n    this._modalService.open(foldernamemodal).result.then((result) => {\n      if (this.folderName !== \"\") {\n        this.addFolder();\n      } else {\n        this.alertError(\"Empty folder name !!\");\n      }\n\n    }, (reason) => {\n      this.folderName = \"\";\n    });\n  }\n  openFileModal(filenamemodal) {\n    this._modalService.open(filenamemodal).result.then((result) => {\n      if (this.fileName !== \"\") {\n        this.addFile();\n      } else {\n        this.alertError(\"Empty file name !!\");\n      }\n\n    }, (reason) => {\n      this.fileName = \"\";\n    });\n  }\n\n\n  addFolder() {\n    var dir = this.path.toString().replace(/,/g, \"/\");\n    dir += \"/\" + this.folderName;\n    this._Http.post(this.SERVER_URL + \"/tree?dir=\" + dir, {}).subscribe(\n      (response) => {\n        var data = response.json();\n        if (data.error) {\n          this.alertError(data.error.code + \"    \" + data.error.errno + \"  \" + data.error.syscall)\n        } else {\n          this.tree(data.path);\n        }\n      },\n      (error) => {\n        this.alertError(JSON.stringify(error))\n      }\n    )\n    this.folderName = \"\";\n  }\n  addFile() {\n\n    var dir = this.path.toString().replace(/,/g, \"/\");\n    this.uploader.setOptions({ url: 'http://localhost:3000/upload?dir=' + dir + \"&name=\" + this.fileName })\n    this.uploader.uploadAll();\n    this.uploader.onCompleteItem = (item, response, status, header) => {\n      if (status !== 200) {\n         this.alertError(status+ \" Upload error !!\")\n        \n      }\n       this.fileName=\"\";\n      this.tree(dir);\n      this.uploader.clearQueue();\n    }\n  }\n\n\n\n  deleteFolder(dir: string) {\n    this._Http.delete(this.SERVER_URL + \"/tree?dir=\" + dir).subscribe(\n      (response) => {\n        var data = response.json();\n        if (data.error) {\n          this.alertError(data.error.code + \"    \" + data.error.errno + \"  \" + data.error.syscall)\n        } else {\n          var ar = data.path.split(\"/\");\n          var p = \"/\" + ar[ar.length - 1];\n          var dir = data.path.replace(p, \"\");\n          this.tree(dir);\n        }\n      },\n      (error) => { this.alertError(JSON.stringify(error)) }\n    )\n  }\n\n\n  resolvePath(p, index) {\n    var path = \"\";\n    for (var i = 0; i < index; i++) {\n      path += this.path[i] + \"/\";\n    }\n    path += p;\n    this.tree(path)\n  }\n\n  tree(dir: string) {\n    this._Http.get(this.SERVER_URL + \"/tree?dir=\" + dir).subscribe(\n      (response) => {\n        this.path = dir.split('/');\n        var data = response.json();\n        this.folders = data.filter(x => x.isDir);\n        this.files = data.filter(x => !x.isDir);\n      },\n      (error) => { console.log(error) }\n    )\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { FileSelectDirective } from 'ng2-file-upload';\n\nimport { NgbModalModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    FileSelectDirective\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule,\n    NgbModule.forRoot()\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".divider{\\r\\n    margin-bottom: 50px;\\r\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = 218\n// module chunks = 1","module.exports = \"<hr>\\n<div class=\\\"text-center\\\">\\n  <h1>Welcome to your file server</h1>\\n</div>\\n<hr class=\\\"divider\\\">\\n<h3 class=\\\"text-center\\\">Path: \\n  <strong *ngFor=\\\"let p of path; let i = index\\\"><button class=\\\"btn btn-default\\\" (click)=\\\"resolvePath(p,i)\\\">{{ p }}</button> /</strong>\\n  </h3>\\n  <hr class=\\\"divider\\\">\\n<div class=\\\"row\\\">\\n  \\n  <div class=\\\"col-md-6\\\">\\n    <button (click)=\\\"openFolderModal(foldernamemodal)\\\" class=\\\"btn btn-success float-right\\\" >Create new folder</button>\\n    <h3 class=\\\"text-center\\\">folder: <strong>{{ folders.length  }}</strong></h3>\\n    <hr>\\n    <ul class=\\\"list-group\\\">\\n      <li  *ngFor=\\\"let f of folders\\\" class=\\\"list-group-item\\\">\\n        {{ f.name }}\\n\\n        <button (click)=\\\"tree(f.path)\\\" class=\\\"btn btn-primary float-right\\\" >-></button>\\n        <button (click)=\\\"deleteFolder(f.path)\\\" class=\\\"btn btn-danger float-right\\\" >-</button>\\n      </li>\\n    </ul>\\n  </div>\\n  <div class=\\\"col-md-6\\\">\\n    <button *ngIf=\\\"!uploader.isUploading\\\" (click)=\\\"openFileModal(filenamemodal)\\\" class=\\\"btn btn-success float-right\\\" >Upload new file</button>\\n    <p *ngIf=\\\"uploader.isUploading\\\"  class=\\\" float-right\\\" >{{uploader.progress}} %</p>\\n   \\n    <h3 class=\\\"text-center\\\">Files:  <strong>{{ files.length  }}</strong></h3>\\n    <hr>\\n    <ul class=\\\"list-group\\\">\\n      <li *ngFor=\\\"let f of files\\\" class=\\\"list-group-item\\\">\\n        {{ f.name  }}\\n        <a target=\\\"_blank\\\" href=\\\"{{SERVER_URL}}/upload?dir={{ f.path }}\\\" class=\\\"btn btn-primary float-right\\\" >-></a>\\n        <button (click)=\\\"deleteFolder(f.path)\\\" class=\\\"btn btn-danger float-right\\\" >-</button>\\n      </li>\\n\\n\\n    </ul>\\n  </div>\\n</div>\\n\\n<ng-template #foldernamemodal let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\n  <div class=\\\"modal-header\\\">\\n    <h4 class=\\\"modal-title\\\">New Folder name</h4>\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"d('Cross click')\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n  </div>\\n  <div class=\\\"modal-body\\\">\\n    <div class=\\\"form-group\\\">\\n      <label class=\\\"form-control-label\\\" for=\\\"f\\\">Folder name</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"folder\\\" id=\\\"f\\\" [(ngModel)]=\\\"folderName\\\">\\n    </div>\\n  </div>\\n  <div class=\\\"modal-footer\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"c('Close click')\\\">Valider</button>\\n  </div>\\n</ng-template>\\n\\n<ng-template #filenamemodal let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\n  <div class=\\\"modal-header\\\">\\n    <h4 class=\\\"modal-title\\\">New File name</h4>\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"d('Cross click')\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n  </div>\\n  <div class=\\\"modal-body\\\">\\n    <div class=\\\"form-group\\\">\\n      <label class=\\\"form-control-label\\\" for=\\\"f\\\">File name</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"file\\\" id=\\\"f\\\" [(ngModel)]=\\\"fileName\\\">\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label class=\\\"form-control-label\\\" for=\\\"fs\\\">File name</label>\\n      <input ng2FileSelect  [uploader]=\\\"uploader\\\" type=\\\"file\\\" class=\\\"form-control-file\\\"  id=\\\"fs\\\" >\\n    </div>\\n\\n  </div>\\n  <div class=\\\"modal-footer\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"c('Close click')\\\">Valider</button>\\n  </div>\\n</ng-template>\\n\\n<ng-template #error let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\n  <div class=\\\"modal-header\\\">\\n    <h4 class=\\\"modal-title\\\">Error</h4>\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"d('Cross click')\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n  </div>\\n  <div class=\\\"modal-body\\\">\\n    <p class=\\\"text-danger\\\">{{ ERROR }}</p>\\n  </div>\\n  <div class=\\\"modal-footer\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"c('Close click')\\\">Close</button>\\n  </div>\\n</ng-template>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = 221\n// module chunks = 1"],"sourceRoot":""}